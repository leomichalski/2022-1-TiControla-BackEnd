# This is a basic workflow to help you get started with Actions

name: CD

on:
  pull_request:
    branches: 
      - main
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # upload a imagem docker para o docker registry
  docker-upload:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Autentica o usu√°rio do Docker Hub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}}

      - name: Constroe imagens Docker e sobe elas para o Docker Hub
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            leommiranda/ti-controla-django-api:latest
            leommiranda/ti-controla-django-api:${{github.run_number}}
  CD:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [docker-upload]
    steps:
      - uses: actions/checkout@v3

      - name: Define o Kube config para se conectar ao cluster no servidor
        uses: Azure/k8s-set-context@v3.0
        with:
          # Acceptable values: kubeconfig (default) or service-account or service-principal
          method: kubeconfig
          # Contents of kubeconfig file
          kubeconfig: ${{secrets.K8S_CONFIG}}

      - name: Cria os secrets da API
        uses: azure/k8s-create-secret@v3.0
        with:
          namespace: 'default'
          secret-type: 'generic'
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: api-secret
          # JSON object with plaintext string data for secret ex: {"key1":"value1"}
          string-data:  ${{ secrets.API_SECRET }}

      - name: Cria os secrets do banco de dados
        uses: azure/k8s-create-secret@v3.0
        with:
          namespace: 'default'
          secret-type: 'generic'
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: db-secret
          # JSON object with plaintext string data for secret ex: {"key1":"value1"}
          string-data:  ${{ secrets.DB_SECRET }}

      - name: Faz o deploy do cluster Kubernetes
        uses: Azure/k8s-deploy@v4.3
        with:
          images: |
            leommiranda/ti-controla-django-api:latest
          # Path to the manifest files which will be used for deployment.
          manifests: |
            ./k8s/clusterissuer.yaml
            ./k8s/persistentvolume.yaml
            ./k8s/deployment.yaml
            ./k8s/ingress.yaml
          # # Resource group name - Only required if using private cluster
          # name: # optional
